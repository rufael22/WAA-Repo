{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/WAA-Repo/WAA-Repo/Lab-8/lab8/src/container/DashBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Posts from \"./posts/Posts\";\nimport axios from \"axios\";\nimport PostDetails from \"./../components/postDetails/PostDetails\";\nimport NewPost from \"./../components/newPost/NewPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [postState, setPostState] = useState([]); // datas\n\n  const [flag, setFlag] = useState(true); // preview\n\n  const [selectedId, setSelectedId] = useState(null);\n  const fetchData = () => {\n    axios.get('http://localhost:8080/api/v1/posts').then(response => {\n      setPostState(response.data);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, [flag]);\n  const selectHandler = id => {\n    setSelectedId(id);\n    console.log(id);\n  };\n\n  // Delete posts by id\n\n  const deleteHandler = id => {\n    axios.delete(`http://localhost:8070/api/v1/posts/delete/${id}`).then(() => {\n      setPostState(postState.filter(p => p.id != id));\n      setSelectedId(null);\n    });\n  };\n  const updateFlag = () => {\n    setFlag(!flag);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Post\",\n      children: /*#__PURE__*/_jsxDEV(Posts, {\n        data: postState,\n        setSelected: selectHandler,\n        deletePost: deleteHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostDetails, {\n        id: selectedId,\n        title: {\n          ...postState[selectedId - 1]\n        }.title,\n        author: {\n          ...postState[selectedId - 1]\n        }.author,\n        content: {\n          ...postState[selectedId - 1]\n        }.content,\n        deletePost: deleteHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NewPost, {\n        id: postState.id,\n        title: postState.title,\n        author: postState.author,\n        content: postState.content,\n        updateFlag: updateFlag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n};\n_s(Dashboard, \"vaNBEz5pACI8SWlV/3XDolpvYAE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","Posts","axios","PostDetails","NewPost","Dashboard","postState","setPostState","flag","setFlag","selectedId","setSelectedId","fetchData","get","then","response","data","catch","error","console","log","message","selectHandler","id","deleteHandler","delete","filter","p","updateFlag","title","author","content"],"sources":["/Users/user/Desktop/WAA-Repo/WAA-Repo/Lab-8/lab8/src/container/DashBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Posts from \"./posts/Posts\";\r\nimport axios from \"axios\";\r\nimport PostDetails from \"./../components/postDetails/PostDetails\";\r\nimport NewPost from \"./../components/newPost/NewPost\"\r\n\r\nconst Dashboard = () => {\r\n\r\n\r\n    const [postState, setPostState] = useState([]);    // datas\r\n\r\n    const [flag, setFlag] = useState(true);  // preview\r\n\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n\r\n\r\n\r\n\r\n    const fetchData = () => {\r\n        axios.get('http://localhost:8080/api/v1/posts')\r\n            .then(response => {\r\n                setPostState(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n\r\n    useEffect(() => { fetchData() }, [flag])\r\n\r\nconst selectHandler = (id)=>{\r\n    setSelectedId(id)\r\n    console.log(id);\r\n}\r\n\r\n// Delete posts by id\r\n\r\nconst deleteHandler = (id)=>{\r\n    axios.delete(`http://localhost:8070/api/v1/posts/delete/${id}`)\r\n    .then(()=>{\r\n        setPostState(postState.filter(p=>p.id != id))\r\n        setSelectedId(null)\r\n    })\r\n}\r\nconst updateFlag = () => {\r\n    setFlag(!flag);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n\r\n        <div className=\"Post\">\r\n            <Posts\r\n                data={postState}\r\n                setSelected={selectHandler}\r\n                deletePost={deleteHandler}\r\n            />\r\n        </div>\r\n\r\n        <div>\r\n            <PostDetails \r\n             id={selectedId}\r\n             title={{ ...postState[selectedId - 1] }.title}\r\n             author={{ ...postState[selectedId - 1] }.author}\r\n             content={{ ...postState[selectedId - 1] }.content}\r\n             deletePost={deleteHandler}\r\n            />\r\n        </div>\r\n        <div>\r\n        < NewPost\r\n                    id={postState.id}\r\n                    title={postState.title}\r\n                    author={postState.author}\r\n                    content={postState.content}\r\n                    updateFlag={updateFlag}\r\n                    />\r\n        </div>\r\n\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}