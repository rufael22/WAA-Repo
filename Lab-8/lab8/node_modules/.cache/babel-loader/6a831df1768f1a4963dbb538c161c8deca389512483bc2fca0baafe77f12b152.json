{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/WAA-Repo/WAA-Repo/Lab-8/lab8/src/components/newPost/NewPost.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './NewPost.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPost = props => {\n  _s();\n  const [post, setPost] = useState({\n    title: '',\n    content: '',\n    author: ''\n  });\n  const addPostHandler = event => {\n    axios.post('http://localhost:8070/api/v1/posts', post).then(() => {\n      props.updateFlag();\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Id: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        label: 'id',\n        name: 'id',\n        value: props.id,\n        onChange: event => setPost({\n          ...post,\n          id: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        label: 'title',\n        name: 'title',\n        value: props.title,\n        onChange: event => setPost({\n          ...post,\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        label: 'author',\n        name: 'author',\n        value: props.author,\n        onChange: event => setPost({\n          ...post,\n          author: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        label: 'content',\n        name: 'content',\n        value: props.content,\n        onChange: event => setPost({\n          ...post,\n          content: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPostHandler,\n        children: \"Add Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPost, \"UYk4D48b1+VpiZfYgmznbFfZgI4=\");\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["useState","axios","NewPost","props","post","setPost","title","content","author","addPostHandler","event","then","updateFlag","catch","error","console","log","message","id","target","value"],"sources":["/Users/user/Desktop/WAA-Repo/WAA-Repo/Lab-8/lab8/src/components/newPost/NewPost.js"],"sourcesContent":["\r\n\r\nimport { useState } from 'react'\r\nimport './NewPost.css'\r\nimport axios from 'axios'\r\n\r\n\r\nconst NewPost = (props) => {\r\n\r\n    const [post, setPost] = useState({\r\n        title: '',\r\n        content: '',\r\n        author: '',\r\n    })\r\n\r\n    const addPostHandler = (event) => {\r\n       \r\n        axios.post('http://localhost:8070/api/v1/posts', post)\r\n            .then(()=> {\r\n                props.updateFlag();\r\n               \r\n            })\r\n            .catch(error => { console.log(error.message) })\r\n    }\r\n\r\n    return (\r\n        <div className=\"AddPost\">\r\n            <h1>Add Post</h1>\r\n            <form>\r\n                <label>Id: </label>\r\n                <input type=\"text\"\r\n                    label={'id'}\r\n                    name={'id'}\r\n                    value={props.id} onChange={(event) => setPost({ ...post, id: event.target.value })}\r\n                />\r\n                <label>Title: </label>\r\n                <input type=\"text\"\r\n                    label={'title'}\r\n                    name={'title'}\r\n                    value={props.title} onChange={(event) => setPost({ ...post, title: event.target.value })}\r\n                />\r\n\r\n                <label>Author: </label>\r\n                <input type=\"text\"\r\n                    label={'author'}\r\n                    name={'author'}\r\n                    value={props.author} onChange={(event) => setPost({ ...post, author: event.target.value })}\r\n                />\r\n\r\n                <label>Content: </label>\r\n                <input type=\"text\"\r\n                    label={'content'}\r\n                    name={'content'}\r\n                    value={props.content} onChange={(event) => setPost({ ...post, content: event.target.value })}\r\n                />\r\n\r\n                <button onClick={addPostHandler}>Add Post </button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost;"],"mappings":";;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AAAA;AAGzB,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAA;EAEvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC7BM,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAE9BT,KAAK,CAACG,IAAI,CAAC,oCAAoC,EAAEA,IAAI,CAAC,CACjDO,IAAI,CAAC,MAAK;MACPR,KAAK,CAACS,UAAU,EAAE;IAEtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;IAAC,CAAC,CAAC;EACvD,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB,eACjB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAO,IAAI,EAAC,MAAM;QACd,KAAK,EAAE,IAAK;QACZ,IAAI,EAAE,IAAK;QACX,KAAK,EAAEd,KAAK,CAACe,EAAG;QAAC,QAAQ,EAAGR,KAAK,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEc,EAAE,EAAER,KAAK,CAACS,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QACrF,eACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACtB;QAAO,IAAI,EAAC,MAAM;QACd,KAAK,EAAE,OAAQ;QACf,IAAI,EAAE,OAAQ;QACd,KAAK,EAAEjB,KAAK,CAACG,KAAM;QAAC,QAAQ,EAAGI,KAAK,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,KAAK,EAAEI,KAAK,CAACS,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3F,eAEF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAO,IAAI,EAAC,MAAM;QACd,KAAK,EAAE,QAAS;QAChB,IAAI,EAAE,QAAS;QACf,KAAK,EAAEjB,KAAK,CAACK,MAAO;QAAC,QAAQ,EAAGE,KAAK,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEI,MAAM,EAAEE,KAAK,CAACS,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7F,eAEF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB,eACxB;QAAO,IAAI,EAAC,MAAM;QACd,KAAK,EAAE,SAAU;QACjB,IAAI,EAAE,SAAU;QAChB,KAAK,EAAEjB,KAAK,CAACI,OAAQ;QAAC,QAAQ,EAAGG,KAAK,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEG,OAAO,EAAEG,KAAK,CAACS,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/F,eAEF;QAAQ,OAAO,EAAEX,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhD;EAAA;IAAA;IAAA;IAAA;EAAA,QAEL;AAEd,CAAC;AAAA,GAvDKP,OAAO;AAAA,KAAPA,OAAO;AAyDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}